/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        ctrl_z: ctrl_z {
            label = "ctrl_z";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp Z>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        ctrl_x: ctrl_x {
            label = "ctrl_x";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        ctrl_c: ctrl_c {
            label = "ctrl_c";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        ctrl_v: ctrl_v {
            label = "ctrl_v";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | [ |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  | LWR |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | SPACE |   | ENTER | BKSP | RSE |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E      &kp R  &kp T      &kp Y      &kp U  &kp I          &kp O    &kp P     &kp LBKT
&kp TAB    &kp A  &kp S  &kp D      &kp F  &kp G      &kp H      &kp J  &kp K          &kp L    &kp SEMI  &kp RIGHT_WIN
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V  &kp B      &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LCTRL  &mo 1  &kp RET    &kp SPACE  &mo 2  &kp RIGHT_ALT
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     |   |     |     |     |     |     |     |
            // |      |     |     |     |     |     |   |     |     |     |     |     |     |
            // |      |     |     |     |     |     |   |     |     |     |     |     |     |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&none   &kp N1           &kp N2       &kp N3    &kp N4          &kp N5             &kp N6            &kp N7             &kp N8         &kp N9                &kp N0                 &none
&none   &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR      &kp PERCENT        &kp CARET         &kp AMPERSAND      &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_WIN
&trans  &kp EQUAL        &kp MINUS    &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LESS_THAN  &kp GREATER_THAN      &kp SLASH              &kp PIPE
                                      &trans    &trans          &trans             &trans            &trans             &trans
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     |   |     |     |     |     |     |     |
            // |      |     |     |     |     |     |   |     |     |     |     |     |     |
            // |      |     |     |     |     |     |   |     |     |     |     |     |     |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&none   &none    &none    &none    &none    &none     &kp K_APP       &kp END        &kp HOME      &none            &kp PRINTSCREEN  &none
&none   &none    &none    &none    &none    &none     &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT_ARROW  &kp BACKSPACE    &kp DELETE
&trans  &ctrl_z  &ctrl_x  &ctrl_c  &ctrl_v  &none     &kp CAPS        &kp PAGE_DOWN  &kp PAGE_UP   &none            &none            &trans
                          &trans   &trans   &trans    &trans          &trans         &trans
            >;
        };

        layer_win {
            bindings = <
&none   &none   &none   &none   &kp F11  &kp F12    &none   &none   &none   &none  &none  &none
&none   &kp F1  &kp F2  &kp F3  &kp F4   &kp F5     &none   &none   &none   &none  &none  &kp RIGHT_WIN
&trans  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10    &none   &none   &none   &none  &none  &trans
                        &trans  &trans   &trans     &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        two_fingers {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
