/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        win_1: win_1 {
            label = "win_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp N1>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_2: win_2 {
            label = "win_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_3: win_3 {
            label = "win_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp N3>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_4: win_4 {
            label = "win_4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp N4>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_5: win_5 {
            label = "win_5";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp N5>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_6: win_6 {
            label = "win_6";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp N6>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_7: win_7 {
            label = "win_7";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp N7>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_8: win_8 {
            label = "win_8";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp N8>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_9: win_9 {
            label = "win_9";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp N9>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_0: win_0 {
            label = "win_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp N0>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        // i3 window management macros

        win_h: win_h {
            label = "win_h";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp H>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_j: win_j {
            label = "win_j";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp J>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_k: win_k {
            label = "win_k";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp K>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_l: win_l {
            label = "win_l";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_shift_h: win_shift_h {
            label = "win_shift_h";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LSHFT>,
                <&macro_tap>,
                <&kp H>,
                <&macro_release>,
                <&kp LSHFT &kp LEFT_WIN>;
        };

        win_shift_j: win_shift_j {
            label = "win_shift_j";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LSHFT>,
                <&macro_tap>,
                <&kp J>,
                <&macro_release>,
                <&kp LSHFT &kp LEFT_WIN>;
        };

        win_shift_k: win_shift_k {
            label = "win_shift_k";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LSHFT>,
                <&macro_tap>,
                <&kp K>,
                <&macro_release>,
                <&kp LSHFT &kp LEFT_WIN>;
        };

        win_shift_l: win_shift_l {
            label = "win_shift_l";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LSHFT>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LSHFT &kp LEFT_WIN>;
        };

        win_q: win_q {
            label = "win_q";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp Q>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_f: win_f {
            label = "win_f";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp F>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_c: win_c {
            label = "win_c";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_v: win_v {
            label = "win_v";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_s: win_s {
            label = "win_s";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_w: win_w {
            label = "win_w";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp W>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_e: win_e {
            label = "win_e";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp E>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_r: win_r {
            label = "win_r";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp R>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_m: win_m {
            label = "win_m";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp M>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_d: win_d {
            label = "win_d";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp D>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_shift_c: win_shift_c {
            label = "win_shift_c";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LSHFT>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LSHFT &kp LEFT_WIN>;
        };

        win_shift_r: win_shift_r {
            label = "win_shift_r";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LSHFT>,
                <&macro_tap>,
                <&kp R>,
                <&macro_release>,
                <&kp LSHFT &kp LEFT_WIN>;
        };

        win_shift_e: win_shift_e {
            label = "win_shift_e";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LSHFT>,
                <&macro_tap>,
                <&kp E>,
                <&macro_release>,
                <&kp LSHFT &kp LEFT_WIN>;
        };

        win_escape: win_escape {
            label = "win_escape";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp ESCAPE>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_a: win_a {
            label = "win_a";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_return: win_return {
            label = "win_return";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp RET>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_space: win_space {
            label = "win_space";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };

        win_tab: win_tab {
            label = "win_tab";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };
    };

    behaviors {
        mt { tapping-term-ms = <250>; };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | ESC  |  Q  |  W  |  E   |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [  |
            // | TAB  |  A  |  S  |  D   |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | '  |
            // | SHFT |  Z  |  X  |  C   |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT|
            //                    | CTRL | LWR | RET |   | SPC | RSE  | ALT |

            bindings = <
&lt 4 ESC  &kp Q  &kp W  &kp E      &kp R  &kp T      &kp Y      &kp U  &kp I         &kp O    &kp P     &kp LBKT
&kp TAB    &kp A  &kp S  &kp D      &kp F  &kp G      &kp H      &kp J  &kp K         &kp L    &kp SEMI  &kp APOSTROPHE
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V  &kp B      &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LCTRL  &mo 1  &kp RET    &kp SPACE  &mo 2  &kp LEFT_ALT
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // | ~    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            // |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |     |
            // |      |  =  |  -  |  +  |  {  |  }  |   |  [  |  ]  |  <  |  >  |  /  |  |  |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&kp GRAVE     &kp N1           &kp N2       &kp N3    &kp N4          &kp N5             &kp N6            &kp N7             &kp N8         &kp N9                &kp N0                 &kp INSERT
&kp LEFT_WIN  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR      &kp PERCENT        &kp CARET         &kp AMPERSAND      &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&trans        &kp EQUAL        &kp MINUS    &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LESS_THAN  &kp GREATER_THAN      &kp SLASH              &mt RIGHT_SHIFT BACKSLASH
                                            &trans    &trans          &trans             &trans            &trans             &trans
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     | F11 | F12 |   | APP | END | HOME | INS | PRSC |     |
            // |      | F1  | F2  | F3  | F4  | F5  |   | LFT | DWN | UP   | RGT | BKSP | DEL |
            // |      | F6  | F7  | F8  | F9  | F10 |   | CAP | PGDN| PGUP |     |      |     |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&none   &none   &none   &none   &kp F11  &kp F12    &kp K_APP       &kp END        &kp HOME      &kp INSERT       &kp PRINTSCREEN  &none
&none   &kp F1  &kp F2  &kp F3  &kp F4   &kp F5     &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT_ARROW  &kp BACKSPACE    &kp DELETE
&trans  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10    &kp CAPS        &kp PAGE_DOWN  &kp PAGE_UP   &none            &none            &trans
                        &trans  &trans   &trans     &trans          &trans         &trans
            >;
        };

        layer_win {
            // -----------------------------------------------------------------------------------------
            // |WESC  | W+1 | W+2 | W+3 | W+4 | W+5 |   | W+6 | W+7 | W+8 | W+9 | W+0 |     |
            // |WTAB  |     |     | W+D | W+F |     |   | W+H | W+J | W+K | W+L |     |     |
            // |      |     |     | W+C | W+V |     |   |     | W+M |     | W+Q | W+R |     |
            //                    |     |     |WRET |   |WSPC |     |     |

            bindings = <
&win_escape  &win_1  &win_2  &win_3  &win_4  &win_5         &win_6      &win_7  &win_8  &win_9  &win_0  &none
&win_tab     &none   &none   &win_d  &win_f  &none          &win_h      &win_j  &win_k  &win_l  &none   &none
&trans       &none   &none   &win_c  &win_v  &none          &none       &win_m  &none   &win_q  &win_r  &trans
                             &trans  &trans  &win_return    &win_space  &trans  &trans
            >;
        };

        layer_settings {
            // -----------------------------------------------------------------------------------------
            // |      | BT1 | BT2 | BT3 | CLR | TOG |   |     |     |     |     |     |     |
            // |      |     |     |     |     |     |   |     |     |     |     |     |     |
            // |      |     |     |     |     |     |   |     |     |     |     |     |     |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&none   &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR  &out OUT_TOG    &none   &none   &none   &none  &none  &none
&none   &none         &none         &none         &none       &none           &none   &none   &none   &none  &none  &none
&trans  &none         &none         &none         &none       &none           &none   &none   &none   &none  &none  &trans
                                    &trans        &trans      &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        two_fingers {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
